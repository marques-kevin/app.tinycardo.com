name: Tests and Lint

on:
  pull_request:
    branches: [main]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Get yarn.lock hash
        id: yarn-lock-hash
        run: echo "hash=$(sha256sum yarn.lock | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            node_modules
          key: ${{ runner.os }}-yarn-${{ steps.yarn-lock-hash.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

  storybook:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            node_modules
          key: ${{ runner.os }}-yarn-

      - name: Build Storybook
        run: yarn build-storybook

  tests:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            node_modules
          key: ${{ runner.os }}-yarn-

      - name: Run tests
        run: yarn test

  type-check:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            node_modules
          key: ${{ runner.os }}-yarn-

      - name: Type check
        run: echo "todo"

  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            node_modules
          key: ${{ runner.os }}-yarn-

      - name: Lint
        run: yarn lint

  i18n:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            node_modules
          key: ${{ runner.os }}-yarn-

      - name: Check i18n sync
        run: yarn i18n:sync:check

  build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            node_modules
          key: ${{ runner.os }}-yarn-

      - name: Build
        run: yarn build
